PEP: 9999
Title: Platform Tag for Linux Distributions Using Musl
Author: Tzu-ping Chung <uranusjr@gmail.com>
Sponsor: TBD
PEP-Delegate: TBD
Discussions-To: https://discuss.python.org/t/7165
Status: Draft
Type: Informational
Content-Type: text/x-rst
Created: TBA


Abstract
========

This PEP proposes a new platfrom tag series ``musllinux`` for
binary Python package distributions for a Python installation linked
against musl on a Linux distribution. The tag works similarly to the
"perennial manylinux" platform tags specified in :pep:`600`, but
targeting platforms based on musl instead.


Motivation
==========

With the wide use of containers, distributions such as Alpine Linux,
[alpine]_ have been gaining more popularity than ever. Many of them
based on musl, [musl]_ a different libc implementation from glibc, and
therefore cannot use the existing ``manylinux`` platform tags. This
means that Python package projects cannot deploy binary distributions
on PyPI for them. Users of such projects demand build constraints from
those projects, putting unnecessary burden on project maintainers.


Rationale
=========

Logic behind the new platform tag largely follows :pep:`600`, and
require wheels using this tag make similar promises. Please refer to
the PEP for more details on rationale and reasoning behind the design.


Specification
=============

Tags using the new scheme will take the form::

    musllinux_${MUSLMAJOR}_${MUSLMINOR}_${ARCH}

Distributions using the tag make similar promises to those discribed
in :pep:`600`, including:

1. The distribution works on any mainstream Linux distributions with
   musl version ``${MUSLMAJOR}.${MUSLMINOR}`` or later.
2. The distribution's ``${ARCH}`` matches the return value of
   ``sysconfig.get_platform()`` on the host system.

One exception is made to the first promise: If a project chooses to
publish a distribution using musl 1.2 or later on, it does not need to
promise distributions on the same architecture built against musl 1.1
or earlier to work on musl 1.2 or later. This is due to a potentially
ABI incompatible change in musl 1.2 that switched ``time_t`` to a
64-bit type, and may cause breakage to libraries built on musl 1.1 and
earlier. [musl-time64]_


Backwards Compatibility
=======================

There are no backwards compatibility concerns in this PEP.


Rejected Ideas
==============

Create a platform tag based specifically for Alpine Linux
---------------------------------------------------------

Past experience on the ``manylinux`` tag series shows this approach
would be too costly time-wise. The author feels the "works well with
others" rule both is more inclusive and works well enough in practice.


References
==========

.. [alpine] https://alpinelinux.org/

.. [musl] https://musl.libc.org

.. [musl-time64] https://musl.libc.org/time64.html


Copyright
=========

This document is placed in the public domain or under the
CC0-1.0-Universal license, whichever is more permissive.


..
   Local Variables:
   mode: indented-text
   indent-tabs-mode: nil
   sentence-end-double-space: t
   fill-column: 70
   coding: utf-8
   End:
